# Application Basic Configuration
spring.application.name=AssessMate
server.port=8080

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Enable lazy loading in HTTP requests
spring.jpa.open-in-view=true

# Adjusted Logging Configuration
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=INFO
logging.level.edu.cit.AssessMate=DEBUG
logging.level.edu.cit.AssessMate.security=DEBUG

# Validation
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=true

# HTTP Settings
spring.mvc.pathmatch.matching-strategy=ant-path-matcher
server.error.include-message=always
server.error.include-stacktrace=on-param

# Swagger UI
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.version=1.0.0

# Jackson Configuration
spring.jackson.serialization.fail-on-empty-beans=false

# JWT Config
app.jwt.secret=${APP_JWT_SECRET}
app.jwt.expiration=${JWT_EXPIRATION:86400000}

# OAuth2 Configuration (Google)
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/api/auth/oauth2/callback/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# HTTP Headers Configuration
server.servlet.headers.Cross-Origin-Opener-Policy=same-origin